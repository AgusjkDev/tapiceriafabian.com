---
import { Armchair, Palette, Wrench, type LucideIcon } from "lucide-react";

const SERVICES = [
    {
        title: "Tapizados personalizados",
        description:
            "Retapizado completo con diseños, telas y materiales de primera calidad a tu elección.",
        icon: Armchair,
    },
    {
        title: "Reparación y lavado",
        description:
            "Eliminamos manchas, reparamos daños y restauramos la apariencia, devolviéndoles su mejor estado.",
        icon: Wrench,
    },
    {
        title: "Estilos renovados",
        description:
            "Transformamos la apariencia ajustándonos a las tendencias, con un estilo moderno y sofisticado.",
        icon: Palette,
    },
] satisfies {
    title: string;
    description: string;
    icon: LucideIcon;
}[];
---

<section
    class="flex flex-col items-center gap-y-8 px-4 py-32 lg:px-8 xl:gap-y-12 2xl:gap-y-16"
    data-scroll-timeline
>
    <header class="flex flex-col gap-y-4">
        <h3
            class="text-center text-2xl font-black md:text-3xl md:leading-tight xl:text-4xl"
        >
            Nuestros servicios
        </h3>
        <h4
            class="max-w-prose text-center text-lg font-medium text-secondary-foreground"
        >
            Soluciones integrales de tapicería adaptadas a tus necesidades
        </h4>
    </header>

    <div
        class="group grid max-w-md gap-8 lg:max-w-screen-xl lg:grid-cols-3 lg:gap-8 xl:gap-12 2xl:gap-16"
        data-services-container
    >
        {
            SERVICES.map(({ title, description, icon: Icon }) => (
                <div class="relative aspect-square overflow-hidden rounded-3xl bg-secondary p-px before:pointer-events-none before:absolute before:-left-40 before:-top-40 before:z-10 before:size-80 before:translate-x-[var(--mouse-x)] before:translate-y-[var(--mouse-y)] before:rounded-full before:bg-primary before:opacity-0 before:blur-[96px] before:transition-opacity before:duration-500 after:pointer-events-none after:absolute after:-left-48 after:-top-48 after:z-30 after:size-96 after:translate-x-[var(--mouse-x)] after:translate-y-[var(--mouse-y)] after:rounded-full after:bg-primary after:opacity-0 after:blur-[96px] after:transition-opacity after:duration-500 after:hover:opacity-10 before:group-hover:opacity-100">
                    <div class="relative z-20 h-full rounded-[inherit] bg-background p-6 pb-8">
                        <div
                            aria-hidden="true"
                            class="absolute bottom-0 left-1/2 -z-10 aspect-square w-1/2 -translate-x-1/2 translate-y-1/2"
                        >
                            <div class="translate-z-0 absolute inset-0 rounded-full bg-secondary blur-[96px]" />
                        </div>

                        <div class="flex h-full flex-col items-center justify-around">
                            <div
                                aria-hidden="true"
                                class="relative grid w-full place-items-center"
                            >
                                <div class="absolute -z-10 size-[40%] rounded-full bg-primary blur-3xl" />

                                <div class="grid aspect-square w-1/2 place-items-center rounded-full border border-secondary-foreground/5 bg-secondary/20">
                                    <div class="grid aspect-square w-[72.5%] place-items-center rounded-full border border-secondary-foreground/10 bg-secondary/30">
                                        <div class="grid aspect-square w-[60%] place-items-center rounded-full border border-secondary-foreground/15 bg-secondary/40">
                                            <Icon className="aspect-square w-1/3 text-secondary-foreground" />
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="flex flex-col gap-y-2 text-center">
                                <h5 class="text-xl font-bold">{title}</h5>

                                <p class="max-w-prose text-sm text-secondary-foreground">
                                    {description}
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            ))
        }
    </div>
</section>

<script>
    const CONTAINER_SELECTOR = "[data-services-container]";
    const container = document.querySelector<HTMLElement>(CONTAINER_SELECTOR);
    if (!container) {
        throw new Error(
            `Could not find container with selector \`${CONTAINER_SELECTOR}\`.`,
        );
    }

    let size = { w: container.offsetWidth, h: container.offsetHeight };
    const updateSize = () => {
        size = { w: container.offsetWidth, h: container.offsetHeight };
    };

    const cards = Array.from(container.children) as HTMLElement[];
    const updateMouse = ({ clientX, clientY }: MouseEvent) => {
        const containerRect = container.getBoundingClientRect();
        const x = clientX - containerRect.left;
        const y = clientY - containerRect.top;

        if (x > 0 && x < size.w && y > 0 && y < size.h) {
            cards.forEach(card => {
                const { left, top } = card.getBoundingClientRect();
                card.style.setProperty(
                    "--mouse-x",
                    `${(x - (left - containerRect.left)).toFixed(2)}px`,
                );
                card.style.setProperty(
                    "--mouse-y",
                    `${(y - (top - containerRect.top)).toFixed(2)}px`,
                );
            });
        }
    };

    window.addEventListener("resize", updateSize);
    container.addEventListener("mousemove", updateMouse);
</script>
